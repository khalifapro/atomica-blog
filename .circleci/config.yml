version: 2.1
jobs:
  build_onboard:
    docker:
      - image: circleci/golang:1.17-stretch-node
    working_directory: /go/src/github.com/asaberwd/atomica-blog
    steps:
      - checkout
      - run:
          name: Configure go swagger
          no_output_timeout: 30m
          command: |
            dir=$(mktemp -d)
            git clone https://github.com/go-swagger/go-swagger "$dir"
            cd "$dir"
            go install ./cmd/swagger
      - run:
          name: Build
          no_output_timeout: 30m
          command: |
            make build
      - run:
          name: Test
          no_output_timeout: 30m
          command: make test

      - persist_to_workspace:
          root: ./
          paths:
            - bin
            - serverless.yml

  deploy_onboard: &deploy_onboard_anchor
    docker:
      - image: cimg/node:17.4.0
    working_directory: /tmp/onboard
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Install Serverless CLI and dependencies
          command: |
            sudo npm i -g serverless@2.69.0
            npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-
      - run:
          name: Setup AWS key
          command: |
            eval "echo 'export AWS_ACCESS_KEY_ID=\$$AWS_ACCESS_KEY_ID_ENV_VAR'" >> $BASH_ENV
            eval "echo 'export AWS_SECRET_ACCESS_KEY=\$$AWS_SECRET_ACCESS_KEY_ENV_VAR'" >> $BASH_ENV
      - attach_workspace:
          at: ./
      - run:
          name: Deploy
          command: sls deploy -s ${STAGE} --verbose
          no_output_timeout: 1.5h

  deploy_dev:
    <<: *deploy_onboard_anchor
    environment:
      AWS_ACCESS_KEY_ID_ENV_VAR: AWS_ACCESS_KEY_ID_DEV
      AWS_SECRET_ACCESS_KEY_ENV_VAR: AWS_SECRET_ACCESS_KEY_DEV
      INSIGHTS_ONBOARDING_PGCONN_ENV_VAR: INSIGHTS_ONBOARDING_PGCONN_DEV
      STAGE: dev


  deploy_prod:
    <<: *deploy_onboard_anchor
    environment:
      AWS_ACCESS_KEY_ID_ENV_VAR: AWS_ACCESS_KEY_ID_PROD
      AWS_SECRET_ACCESS_KEY_ENV_VAR: AWS_SECRET_ACCESS_KEY_PROD
      STAGE: prod

workflows:
  onboard:
    jobs:
      - build_onboard:
          filters:
            tags:
              only: /.*/
      - deploy_dev:
          requires:
            - build_onboard
          filters:
            branches:
              only: add-serverless-lambda #main
            tags:
              ignore: /.*/
      - approve_prod:
          type: approval
          requires:
            - build_onboard
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+(\.\d+)?(\.\d+)?$/
      - deploy_prod:
          requires:
            - approve_prod
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+(\.\d+)?(\.\d+)?$/
